{"ast":null,"code":"var _jsxFileName = \"/Users/balgan/Code/embedding_visualizer/embedding-visualizer/src/Embeddingvisualizer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { PCA } from 'ml-pca';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmbeddingVisualizer = () => {\n  _s();\n  const [strings, setStrings] = useState('');\n  const [apiKey, setApiKey] = useState('');\n  const [embeddings, setEmbeddings] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [selectedString, setSelectedString] = useState('');\n  const canvasRef = useRef(null);\n  const sceneRef = useRef(null);\n  const cameraRef = useRef(null);\n  const pointsRef = useRef(null);\n  const raycasterRef = useRef(new THREE.Raycaster());\n  const mouseRef = useRef(new THREE.Vector2());\n  const getEmbeddings = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      const response = await fetch('https://api.openai.com/v1/embeddings', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${apiKey}`\n        },\n        body: JSON.stringify({\n          input: strings.split('\\n'),\n          model: 'text-embedding-ada-002'\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch embeddings');\n      }\n      const data = await response.json();\n      const newEmbeddings = data.data.map(item => item.embedding);\n      console.log('Fetched embeddings:', newEmbeddings);\n      setEmbeddings(newEmbeddings);\n    } catch (err) {\n      setError('Error fetching embeddings: ' + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    console.log('useEffect triggered. Embeddings length:', embeddings.length);\n    if (embeddings.length > 0 && canvasRef.current) {\n      console.log('Creating scene');\n      const scene = new THREE.Scene();\n      sceneRef.current = scene;\n      scene.background = new THREE.Color(0xf0f0f0); // Light gray background\n\n      const aspect = canvasRef.current.clientWidth / canvasRef.current.clientHeight;\n      const camera = new THREE.PerspectiveCamera(75, aspect, 0.1, 1000);\n      cameraRef.current = camera;\n      const renderer = new THREE.WebGLRenderer({\n        canvas: canvasRef.current,\n        antialias: true\n      });\n      renderer.setSize(canvasRef.current.clientWidth, canvasRef.current.clientHeight);\n      const controls = new OrbitControls(camera, renderer.domElement);\n\n      // Perform PCA to reduce dimensionality to 3D\n      console.log('Performing PCA');\n      const pca = new PCA(embeddings);\n      const reducedData = pca.predict(embeddings, {\n        nComponents: 3\n      });\n      console.log('Reduced data sample:', reducedData.getRow(0), reducedData.getRow(1));\n\n      // Extract and normalize the positions\n      let minVal = Infinity;\n      let maxVal = -Infinity;\n      const positions = new Float32Array(reducedData.rows * 3);\n      for (let i = 0; i < reducedData.rows; i++) {\n        const row = reducedData.getRow(i);\n        for (let j = 0; j < 3; j++) {\n          const val = row[j];\n          positions[i * 3 + j] = val;\n          minVal = Math.min(minVal, val);\n          maxVal = Math.max(maxVal, val);\n        }\n      }\n      console.log('Min value:', minVal, 'Max value:', maxVal);\n      console.log('Positions sample:', positions.slice(0, 9));\n\n      // Normalize and center the points\n      const scale = 2 / (maxVal - minVal);\n      for (let i = 0; i < positions.length; i++) {\n        positions[i] = (positions[i] - minVal) * scale - 1;\n      }\n      console.log('Normalized positions sample:', positions.slice(0, 9));\n\n      // Create points with custom shaders for better-looking nodes\n      const geometry = new THREE.BufferGeometry();\n      geometry.setAttribute('position', new THREE.BufferAttribute(positions, 3));\n      const vertexShader = `\n        varying vec3 vColor;\n        void main() {\n          vColor = vec3(0.5 + position.x / 2.0, 0.5 + position.y / 2.0, 0.5 + position.z / 2.0);\n          gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n          gl_PointSize = 8.0;\n        }\n      `;\n      const fragmentShader = `\n        varying vec3 vColor;\n        void main() {\n          float r = length(gl_PointCoord - vec2(0.5, 0.5));\n          if (r > 0.5) discard;\n          gl_FragColor = vec4(vColor, 1.0 - smoothstep(0.3, 0.5, r));\n        }\n      `;\n      const material = new THREE.ShaderMaterial({\n        vertexShader: vertexShader,\n        fragmentShader: fragmentShader,\n        transparent: true\n      });\n      const points = new THREE.Points(geometry, material);\n      pointsRef.current = points;\n      scene.add(points);\n      console.log('Points added to scene:', points);\n\n      // Add ambient light\n      const ambientLight = new THREE.AmbientLight(0xffffff, 0.5);\n      scene.add(ambientLight);\n\n      // Add directional light\n      const directionalLight = new THREE.DirectionalLight(0xffffff, 0.5);\n      directionalLight.position.set(1, 1, 1);\n      scene.add(directionalLight);\n      camera.position.z = 5;\n      console.log('Starting animation');\n      const animate = () => {\n        requestAnimationFrame(animate);\n        controls.update();\n        renderer.render(scene, camera);\n      };\n      animate();\n      const handleResize = () => {\n        const newAspect = canvasRef.current.clientWidth / canvasRef.current.clientHeight;\n        camera.aspect = newAspect;\n        camera.updateProjectionMatrix();\n        renderer.setSize(canvasRef.current.clientWidth, canvasRef.current.clientHeight);\n      };\n      const handleMouseMove = event => {\n        updateMousePosition(event);\n        updateHoveredString();\n      };\n      canvasRef.current.addEventListener('mousemove', handleMouseMove);\n      window.addEventListener('resize', handleResize);\n      return () => {\n        window.removeEventListener('resize', handleResize);\n        canvasRef.current.removeEventListener('mousemove', handleMouseMove);\n        renderer.dispose();\n      };\n    }\n  }, [embeddings]);\n  const updateMousePosition = event => {\n    const rect = canvasRef.current.getBoundingClientRect();\n    mouseRef.current.x = (event.clientX - rect.left) / rect.width * 2 - 1;\n    mouseRef.current.y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n  };\n  const updateHoveredString = () => {\n    if (sceneRef.current && cameraRef.current && pointsRef.current) {\n      raycasterRef.current.setFromCamera(mouseRef.current, cameraRef.current);\n      const intersects = raycasterRef.current.intersectObject(pointsRef.current);\n      if (intersects.length > 0) {\n        const index = intersects[0].index;\n        const hoveredString = strings.split('\\n')[index];\n        setSelectedString(hoveredString);\n      } else {\n        setSelectedString('');\n      }\n    }\n  };\n  useEffect(() => {\n    const handleClick = event => {\n      updateMousePosition(event);\n      updateHoveredString();\n    };\n    window.addEventListener('click', handleClick);\n    return () => {\n      window.removeEventListener('click', handleClick);\n    };\n  }, [strings]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      height: '100vh',\n      fontFamily: 'Arial, sans-serif',\n      backgroundColor: '#f0f0f0'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '30%',\n        padding: '2rem',\n        borderRight: '1px solid #ccc',\n        backgroundColor: '#ffffff',\n        boxShadow: '2px 0 5px rgba(0,0,0,0.1)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          marginTop: 0,\n          marginBottom: '1rem',\n          color: '#333'\n        },\n        children: \"Embedding Visualizer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: strings,\n        onChange: e => setStrings(e.target.value),\n        placeholder: \"Enter strings (one per line)\",\n        style: {\n          width: '100%',\n          height: '200px',\n          marginBottom: '1rem',\n          padding: '0.5rem',\n          resize: 'vertical',\n          border: '1px solid #ccc',\n          borderRadius: '4px',\n          fontSize: '14px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: apiKey,\n        onChange: e => setApiKey(e.target.value),\n        placeholder: \"Enter OpenAI API Key\",\n        style: {\n          display: 'block',\n          width: '100%',\n          marginBottom: '1rem',\n          padding: '0.5rem',\n          border: '1px solid #ccc',\n          borderRadius: '4px',\n          fontSize: '14px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getEmbeddings,\n        disabled: loading,\n        style: {\n          padding: '0.75rem 1rem',\n          backgroundColor: '#4CAF50',\n          color: 'white',\n          border: 'none',\n          borderRadius: '4px',\n          cursor: 'pointer',\n          width: '100%',\n          fontSize: '16px',\n          fontWeight: 'bold',\n          transition: 'background-color 0.3s'\n        },\n        children: loading ? 'Loading...' : 'Generate Embeddings'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red',\n          marginTop: '1rem',\n          fontSize: '14px'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 19\n      }, this), selectedString && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '1rem',\n          padding: '1rem',\n          backgroundColor: '#e8f5e9',\n          borderRadius: '4px',\n          border: '1px solid #81c784'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          style: {\n            display: 'block',\n            marginBottom: '0.5rem',\n            color: '#2e7d32'\n          },\n          children: \"Selected/Hovered String:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: '14px',\n            color: '#333'\n          },\n          children: selectedString\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '70%',\n        height: '100%',\n        position: 'relative'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        style: {\n          width: '100%',\n          height: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          bottom: '1rem',\n          right: '1rem',\n          background: 'rgba(255,255,255,0.7)',\n          padding: '0.5rem',\n          borderRadius: '4px',\n          fontSize: '12px'\n        },\n        children: \"Tip: Use mouse to rotate, scroll to zoom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 5\n  }, this);\n};\n_s(EmbeddingVisualizer, \"2A66gCib9IZKOW2TYj6rq5MmBqM=\");\n_c = EmbeddingVisualizer;\nexport default EmbeddingVisualizer;\nvar _c;\n$RefreshReg$(_c, \"EmbeddingVisualizer\");","map":{"version":3,"names":["React","useState","useEffect","useRef","THREE","OrbitControls","PCA","jsxDEV","_jsxDEV","EmbeddingVisualizer","_s","strings","setStrings","apiKey","setApiKey","embeddings","setEmbeddings","loading","setLoading","error","setError","selectedString","setSelectedString","canvasRef","sceneRef","cameraRef","pointsRef","raycasterRef","Raycaster","mouseRef","Vector2","getEmbeddings","response","fetch","method","headers","body","JSON","stringify","input","split","model","ok","Error","data","json","newEmbeddings","map","item","embedding","console","log","err","message","length","current","scene","Scene","background","Color","aspect","clientWidth","clientHeight","camera","PerspectiveCamera","renderer","WebGLRenderer","canvas","antialias","setSize","controls","domElement","pca","reducedData","predict","nComponents","getRow","minVal","Infinity","maxVal","positions","Float32Array","rows","i","row","j","val","Math","min","max","slice","scale","geometry","BufferGeometry","setAttribute","BufferAttribute","vertexShader","fragmentShader","material","ShaderMaterial","transparent","points","Points","add","ambientLight","AmbientLight","directionalLight","DirectionalLight","position","set","z","animate","requestAnimationFrame","update","render","handleResize","newAspect","updateProjectionMatrix","handleMouseMove","event","updateMousePosition","updateHoveredString","addEventListener","window","removeEventListener","dispose","rect","getBoundingClientRect","x","clientX","left","width","y","clientY","top","height","setFromCamera","intersects","intersectObject","index","hoveredString","handleClick","style","display","fontFamily","backgroundColor","children","padding","borderRight","boxShadow","marginTop","marginBottom","color","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","resize","border","borderRadius","fontSize","type","onClick","disabled","cursor","fontWeight","transition","ref","bottom","right","_c","$RefreshReg$"],"sources":["/Users/balgan/Code/embedding_visualizer/embedding-visualizer/src/Embeddingvisualizer.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { PCA } from 'ml-pca';\n\nconst EmbeddingVisualizer = () => {\n  const [strings, setStrings] = useState('');\n  const [apiKey, setApiKey] = useState('');\n  const [embeddings, setEmbeddings] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [selectedString, setSelectedString] = useState('');\n  const canvasRef = useRef(null);\n  const sceneRef = useRef(null);\n  const cameraRef = useRef(null);\n  const pointsRef = useRef(null);\n  const raycasterRef = useRef(new THREE.Raycaster());\n  const mouseRef = useRef(new THREE.Vector2());\n\n  const getEmbeddings = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      const response = await fetch('https://api.openai.com/v1/embeddings', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${apiKey}`\n        },\n        body: JSON.stringify({\n          input: strings.split('\\n'),\n          model: 'text-embedding-ada-002'\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to fetch embeddings');\n      }\n\n      const data = await response.json();\n      const newEmbeddings = data.data.map(item => item.embedding);\n      console.log('Fetched embeddings:', newEmbeddings);\n      setEmbeddings(newEmbeddings);\n    } catch (err) {\n      setError('Error fetching embeddings: ' + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    console.log('useEffect triggered. Embeddings length:', embeddings.length);\n    if (embeddings.length > 0 && canvasRef.current) {\n      console.log('Creating scene');\n      const scene = new THREE.Scene();\n      sceneRef.current = scene;\n      scene.background = new THREE.Color(0xf0f0f0);  // Light gray background\n\n      const aspect = canvasRef.current.clientWidth / canvasRef.current.clientHeight;\n      const camera = new THREE.PerspectiveCamera(75, aspect, 0.1, 1000);\n      cameraRef.current = camera;\n      const renderer = new THREE.WebGLRenderer({ canvas: canvasRef.current, antialias: true });\n      renderer.setSize(canvasRef.current.clientWidth, canvasRef.current.clientHeight);\n\n      const controls = new OrbitControls(camera, renderer.domElement);\n\n      // Perform PCA to reduce dimensionality to 3D\n      console.log('Performing PCA');\n      const pca = new PCA(embeddings);\n      const reducedData = pca.predict(embeddings, { nComponents: 3 });\n      console.log('Reduced data sample:', reducedData.getRow(0), reducedData.getRow(1));\n\n      // Extract and normalize the positions\n      let minVal = Infinity;\n      let maxVal = -Infinity;\n      const positions = new Float32Array(reducedData.rows * 3);\n      for (let i = 0; i < reducedData.rows; i++) {\n        const row = reducedData.getRow(i);\n        for (let j = 0; j < 3; j++) {\n          const val = row[j];\n          positions[i * 3 + j] = val;\n          minVal = Math.min(minVal, val);\n          maxVal = Math.max(maxVal, val);\n        }\n      }\n\n      console.log('Min value:', minVal, 'Max value:', maxVal);\n      console.log('Positions sample:', positions.slice(0, 9));\n\n      // Normalize and center the points\n      const scale = 2 / (maxVal - minVal);\n      for (let i = 0; i < positions.length; i++) {\n        positions[i] = (positions[i] - minVal) * scale - 1;\n      }\n\n      console.log('Normalized positions sample:', positions.slice(0, 9));\n\n      // Create points with custom shaders for better-looking nodes\n      const geometry = new THREE.BufferGeometry();\n      geometry.setAttribute('position', new THREE.BufferAttribute(positions, 3));\n\n      const vertexShader = `\n        varying vec3 vColor;\n        void main() {\n          vColor = vec3(0.5 + position.x / 2.0, 0.5 + position.y / 2.0, 0.5 + position.z / 2.0);\n          gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n          gl_PointSize = 8.0;\n        }\n      `;\n\n      const fragmentShader = `\n        varying vec3 vColor;\n        void main() {\n          float r = length(gl_PointCoord - vec2(0.5, 0.5));\n          if (r > 0.5) discard;\n          gl_FragColor = vec4(vColor, 1.0 - smoothstep(0.3, 0.5, r));\n        }\n      `;\n\n      const material = new THREE.ShaderMaterial({\n        vertexShader: vertexShader,\n        fragmentShader: fragmentShader,\n        transparent: true\n      });\n\n      const points = new THREE.Points(geometry, material);\n      pointsRef.current = points;\n      scene.add(points);\n\n      console.log('Points added to scene:', points);\n\n      // Add ambient light\n      const ambientLight = new THREE.AmbientLight(0xffffff, 0.5);\n      scene.add(ambientLight);\n\n      // Add directional light\n      const directionalLight = new THREE.DirectionalLight(0xffffff, 0.5);\n      directionalLight.position.set(1, 1, 1);\n      scene.add(directionalLight);\n\n      camera.position.z = 5;\n\n      console.log('Starting animation');\n      const animate = () => {\n        requestAnimationFrame(animate);\n        controls.update();\n        renderer.render(scene, camera);\n      };\n\n      animate();\n\n      const handleResize = () => {\n        const newAspect = canvasRef.current.clientWidth / canvasRef.current.clientHeight;\n        camera.aspect = newAspect;\n        camera.updateProjectionMatrix();\n        renderer.setSize(canvasRef.current.clientWidth, canvasRef.current.clientHeight);\n      };\n\n      const handleMouseMove = (event) => {\n        updateMousePosition(event);\n        updateHoveredString();\n      };\n\n      canvasRef.current.addEventListener('mousemove', handleMouseMove);\n\n      window.addEventListener('resize', handleResize);\n\n      return () => {\n        window.removeEventListener('resize', handleResize);\n        canvasRef.current.removeEventListener('mousemove', handleMouseMove);\n        renderer.dispose();\n      };\n    }\n  }, [embeddings]);\n\n  const updateMousePosition = (event) => {\n    const rect = canvasRef.current.getBoundingClientRect();\n    mouseRef.current.x = ((event.clientX - rect.left) / rect.width) * 2 - 1;\n    mouseRef.current.y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n  };\n\n  const updateHoveredString = () => {\n    if (sceneRef.current && cameraRef.current && pointsRef.current) {\n      raycasterRef.current.setFromCamera(mouseRef.current, cameraRef.current);\n      const intersects = raycasterRef.current.intersectObject(pointsRef.current);\n\n      if (intersects.length > 0) {\n        const index = intersects[0].index;\n        const hoveredString = strings.split('\\n')[index];\n        setSelectedString(hoveredString);\n      } else {\n        setSelectedString('');\n      }\n    }\n  };\n\n  useEffect(() => {\n    const handleClick = (event) => {\n      updateMousePosition(event);\n      updateHoveredString();\n    };\n\n    window.addEventListener('click', handleClick);\n\n    return () => {\n      window.removeEventListener('click', handleClick);\n    };\n  }, [strings]);\n\n  return (\n    <div style={{ display: 'flex', height: '100vh', fontFamily: 'Arial, sans-serif', backgroundColor: '#f0f0f0' }}>\n      <div style={{ width: '30%', padding: '2rem', borderRight: '1px solid #ccc', backgroundColor: '#ffffff', boxShadow: '2px 0 5px rgba(0,0,0,0.1)' }}>\n        <h2 style={{ marginTop: 0, marginBottom: '1rem', color: '#333' }}>Embedding Visualizer</h2>\n        <textarea\n          value={strings}\n          onChange={(e) => setStrings(e.target.value)}\n          placeholder=\"Enter strings (one per line)\"\n          style={{ \n            width: '100%', \n            height: '200px', \n            marginBottom: '1rem', \n            padding: '0.5rem',\n            resize: 'vertical',\n            border: '1px solid #ccc',\n            borderRadius: '4px',\n            fontSize: '14px'\n          }}\n        />\n        <input\n          type=\"password\"\n          value={apiKey}\n          onChange={(e) => setApiKey(e.target.value)}\n          placeholder=\"Enter OpenAI API Key\"\n          style={{ \n            display: 'block', \n            width: '100%', \n            marginBottom: '1rem', \n            padding: '0.5rem',\n            border: '1px solid #ccc',\n            borderRadius: '4px',\n            fontSize: '14px'\n          }}\n        />\n        <button \n          onClick={getEmbeddings} \n          disabled={loading}\n          style={{ \n            padding: '0.75rem 1rem', \n            backgroundColor: '#4CAF50', \n            color: 'white', \n            border: 'none', \n            borderRadius: '4px',\n            cursor: 'pointer',\n            width: '100%',\n            fontSize: '16px',\n            fontWeight: 'bold',\n            transition: 'background-color 0.3s'\n          }}\n        >\n          {loading ? 'Loading...' : 'Generate Embeddings'}\n        </button>\n        {error && <div style={{ color: 'red', marginTop: '1rem', fontSize: '14px' }}>{error}</div>}\n        {selectedString && (\n          <div style={{ marginTop: '1rem', padding: '1rem', backgroundColor: '#e8f5e9', borderRadius: '4px', border: '1px solid #81c784' }}>\n            <strong style={{ display: 'block', marginBottom: '0.5rem', color: '#2e7d32' }}>Selected/Hovered String:</strong>\n            <span style={{ fontSize: '14px', color: '#333' }}>{selectedString}</span>\n          </div>\n        )}\n      </div>\n      <div style={{ width: '70%', height: '100%', position: 'relative' }}>\n        <canvas ref={canvasRef} style={{ width: '100%', height: '100%' }} />\n        <div style={{ position: 'absolute', bottom: '1rem', right: '1rem', background: 'rgba(255,255,255,0.7)', padding: '0.5rem', borderRadius: '4px', fontSize: '12px' }}>\n          Tip: Use mouse to rotate, scroll to zoom\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EmbeddingVisualizer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}