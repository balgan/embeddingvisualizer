{"ast":null,"code":"var _jsxFileName = \"/Users/balgan/Code/embedding_visualizer/embedding-visualizer/src/Embeddingvisualizer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { PCA } from 'ml-pca';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmbeddingVisualizer = () => {\n  _s();\n  const [strings, setStrings] = useState('');\n  const [apiKey, setApiKey] = useState('');\n  const [embeddings, setEmbeddings] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const canvasRef = useRef(null);\n  const getEmbeddings = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      const response = await fetch('https://api.openai.com/v1/embeddings', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${apiKey}`\n        },\n        body: JSON.stringify({\n          input: strings.split('\\n'),\n          model: 'text-embedding-ada-002'\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch embeddings');\n      }\n      const data = await response.json();\n      setEmbeddings(data.data.map(item => item.embedding));\n    } catch (err) {\n      setError('Error fetching embeddings: ' + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    if (embeddings.length > 0 && canvasRef.current) {\n      const scene = new THREE.Scene();\n      const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n      const renderer = new THREE.WebGLRenderer({\n        canvas: canvasRef.current\n      });\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      const controls = new OrbitControls(camera, renderer.domElement);\n\n      // Perform PCA to reduce dimensionality to 3D\n      const pca = new PCA(embeddings);\n      const reducedData = pca.predict(embeddings, {\n        nComponents: 3\n      });\n\n      // Create points\n      const geometry = new THREE.BufferGeometry();\n      const positions = new Float32Array(reducedData.getRows().flat());\n      geometry.setAttribute('position', new THREE.BufferAttribute(positions, 3));\n      const material = new THREE.PointsMaterial({\n        color: 0x00ff00,\n        size: 0.1\n      });\n      const points = new THREE.Points(geometry, material);\n      scene.add(points);\n      camera.position.z = 5;\n      const animate = () => {\n        requestAnimationFrame(animate);\n        controls.update();\n        renderer.render(scene, camera);\n      };\n      animate();\n      return () => {\n        renderer.dispose();\n      };\n    }\n  }, [embeddings]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '1rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: strings,\n        onChange: e => setStrings(e.target.value),\n        placeholder: \"Enter strings (one per line)\",\n        style: {\n          display: 'block',\n          width: '100%',\n          marginBottom: '0.5rem',\n          padding: '0.5rem'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: apiKey,\n        onChange: e => setApiKey(e.target.value),\n        placeholder: \"Enter OpenAI API Key\",\n        style: {\n          display: 'block',\n          width: '100%',\n          marginBottom: '0.5rem',\n          padding: '0.5rem'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getEmbeddings,\n        disabled: loading,\n        style: {\n          padding: '0.5rem 1rem',\n          backgroundColor: '#4CAF50',\n          color: 'white',\n          border: 'none',\n          cursor: 'pointer'\n        },\n        children: loading ? 'Loading...' : 'Generate Embeddings'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red',\n        marginBottom: '1rem'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        width: '100%',\n        height: '600px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(EmbeddingVisualizer, \"3d++gVfR/tyVrvvo9xpfGnpJzZU=\");\n_c = EmbeddingVisualizer;\nexport default EmbeddingVisualizer;\nvar _c;\n$RefreshReg$(_c, \"EmbeddingVisualizer\");","map":{"version":3,"names":["React","useState","useEffect","useRef","THREE","OrbitControls","PCA","jsxDEV","_jsxDEV","EmbeddingVisualizer","_s","strings","setStrings","apiKey","setApiKey","embeddings","setEmbeddings","loading","setLoading","error","setError","canvasRef","getEmbeddings","response","fetch","method","headers","body","JSON","stringify","input","split","model","ok","Error","data","json","map","item","embedding","err","message","length","current","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","canvas","setSize","controls","domElement","pca","reducedData","predict","nComponents","geometry","BufferGeometry","positions","Float32Array","getRows","flat","setAttribute","BufferAttribute","material","PointsMaterial","color","size","points","Points","add","position","z","animate","requestAnimationFrame","update","render","dispose","style","padding","children","marginBottom","value","onChange","e","target","placeholder","display","width","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","disabled","backgroundColor","border","cursor","ref","height","_c","$RefreshReg$"],"sources":["/Users/balgan/Code/embedding_visualizer/embedding-visualizer/src/Embeddingvisualizer.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { PCA } from 'ml-pca';\n\nconst EmbeddingVisualizer = () => {\n  const [strings, setStrings] = useState('');\n  const [apiKey, setApiKey] = useState('');\n  const [embeddings, setEmbeddings] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const canvasRef = useRef(null);\n\n  const getEmbeddings = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      const response = await fetch('https://api.openai.com/v1/embeddings', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${apiKey}`\n        },\n        body: JSON.stringify({\n          input: strings.split('\\n'),\n          model: 'text-embedding-ada-002'\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to fetch embeddings');\n      }\n\n      const data = await response.json();\n      setEmbeddings(data.data.map(item => item.embedding));\n    } catch (err) {\n      setError('Error fetching embeddings: ' + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (embeddings.length > 0 && canvasRef.current) {\n      const scene = new THREE.Scene();\n      const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n      const renderer = new THREE.WebGLRenderer({ canvas: canvasRef.current });\n      renderer.setSize(window.innerWidth, window.innerHeight);\n\n      const controls = new OrbitControls(camera, renderer.domElement);\n\n      // Perform PCA to reduce dimensionality to 3D\n      const pca = new PCA(embeddings);\n      const reducedData = pca.predict(embeddings, { nComponents: 3 });\n\n      // Create points\n      const geometry = new THREE.BufferGeometry();\n      const positions = new Float32Array(reducedData.getRows().flat());\n      geometry.setAttribute('position', new THREE.BufferAttribute(positions, 3));\n\n      const material = new THREE.PointsMaterial({ color: 0x00ff00, size: 0.1 });\n      const points = new THREE.Points(geometry, material);\n      scene.add(points);\n\n      camera.position.z = 5;\n\n      const animate = () => {\n        requestAnimationFrame(animate);\n        controls.update();\n        renderer.render(scene, camera);\n      };\n\n      animate();\n\n      return () => {\n        renderer.dispose();\n      };\n    }\n  }, [embeddings]);\n\n  return (\n    <div style={{ padding: '1rem' }}>\n      <div style={{ marginBottom: '1rem' }}>\n        <input\n          value={strings}\n          onChange={(e) => setStrings(e.target.value)}\n          placeholder=\"Enter strings (one per line)\"\n          style={{ display: 'block', width: '100%', marginBottom: '0.5rem', padding: '0.5rem' }}\n        />\n        <input\n          type=\"password\"\n          value={apiKey}\n          onChange={(e) => setApiKey(e.target.value)}\n          placeholder=\"Enter OpenAI API Key\"\n          style={{ display: 'block', width: '100%', marginBottom: '0.5rem', padding: '0.5rem' }}\n        />\n        <button \n          onClick={getEmbeddings} \n          disabled={loading}\n          style={{ padding: '0.5rem 1rem', backgroundColor: '#4CAF50', color: 'white', border: 'none', cursor: 'pointer' }}\n        >\n          {loading ? 'Loading...' : 'Generate Embeddings'}\n        </button>\n      </div>\n      {error && <div style={{ color: 'red', marginBottom: '1rem' }}>{error}</div>}\n      <canvas ref={canvasRef} style={{ width: '100%', height: '600px' }} />\n    </div>\n  );\n};\n\nexport default EmbeddingVisualizer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}